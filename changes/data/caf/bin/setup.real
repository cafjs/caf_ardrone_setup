#!/bin/ash
NAME=${NAME:-caf_daemon}

# Read configuration variable file if it is present
[ -r /data/caf/${NAME} ] && . /data/caf/${NAME}


# Read config overrides from CAF_CONFIG_DIR
[ -r ${CAF_CONFIG_DIR}/${NAME} ] && . ${CAF_CONFIG_DIR}/${NAME}

sleep 20
/sbin/ifconfig ath0 0.0.0.0
/sbin/iwconfig ath0 essid ${ESSID} && /bin/wpa_supplicant -B -Dwext -iath0 -c/etc/wpa_supplicant.conf
wait 10
/sbin/udhcpc -i ath0
/sbin/route add default gw ${GATEWAY} ath0
/bin/rm -f /etc/resolv.conf
echo ${DNS} > /etc/resolv.conf
killall udhcpd
/bin/ntpclient -f /data/ntpdata -s -t -l -i 600 -g 10000 -h ${NTP_SERVER} > /data/ntp.log &
/usr/sbin/gpsd -G /dev/ttyUSB0

NOTDONE=${ENABLE_NETWORK_CHECK}

while [ $NOTDONE -gt 0 ]; do
    if ping -c 1 -W 1 github.com > /dev/null ; then
        NOTDONE=0
    else
        echo "Waiting for network"
        sleep 1
    fi
done


cd ${CAF_HOME}

echo "Starting up with URL " ${CAF_APP_URL}

if [ -d ${CAF_APP_REPO_DIR} ]
then
    cd ${CAF_APP_REPO_DIR}
    rm -f /data/caf/output.log
    command1="/data/caf/bin/node --expose_gc ${CAF_HOME}/${CAF_APP_REPO_DIR}/start.js --url ${CAF_APP_URL}"

    if [ -z ${CAF_HTTP_PROXY} ]
    then
        command2=" "
    else
        command2=" --proxy ${CAF_HTTP_PROXY} "
    fi
    if [ -z ${CAF_WIFI_FIFO} ]
    then
        command3=" "
    else
        command3=" --wifiFIFO ${CAF_WIFI_FIFO} "
    fi
    command4=">> /data/caf/output.log"
    command=$command1$command2$command3$command4
    /data/caf/bin/mon  "${command}"
else
    echo "Error: app not installed"
    exit 1
fi


